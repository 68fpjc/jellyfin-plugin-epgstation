/*
 * epgstation
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.6.20
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.OpenAPIDateConverter;

namespace X68fpjc.Jellyfin.EPGStation.OpenAPI.Model
{
    /// <summary>
    /// ドロップログファイル情報
    /// </summary>
    [DataContract(Name = "DropLogFile")]
    public partial class DropLogFile : IEquatable<DropLogFile>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DropLogFile" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected DropLogFile() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="DropLogFile" /> class.
        /// </summary>
        /// <param name="id">ドロップログファイル id (required).</param>
        /// <param name="errorCnt">エラーカウント (required).</param>
        /// <param name="dropCnt">ドロップカウント (required).</param>
        /// <param name="scramblingCnt">スクランブルカウント (required).</param>
        public DropLogFile(int id = default(int), int errorCnt = default(int), int dropCnt = default(int), int scramblingCnt = default(int))
        {
            this.Id = id;
            this.ErrorCnt = errorCnt;
            this.DropCnt = dropCnt;
            this.ScramblingCnt = scramblingCnt;
        }

        /// <summary>
        /// ドロップログファイル id
        /// </summary>
        /// <value>ドロップログファイル id</value>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// エラーカウント
        /// </summary>
        /// <value>エラーカウント</value>
        [DataMember(Name = "errorCnt", IsRequired = true, EmitDefaultValue = false)]
        public int ErrorCnt { get; set; }

        /// <summary>
        /// ドロップカウント
        /// </summary>
        /// <value>ドロップカウント</value>
        [DataMember(Name = "dropCnt", IsRequired = true, EmitDefaultValue = false)]
        public int DropCnt { get; set; }

        /// <summary>
        /// スクランブルカウント
        /// </summary>
        /// <value>スクランブルカウント</value>
        [DataMember(Name = "scramblingCnt", IsRequired = true, EmitDefaultValue = false)]
        public int ScramblingCnt { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DropLogFile {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  ErrorCnt: ").Append(ErrorCnt).Append("\n");
            sb.Append("  DropCnt: ").Append(DropCnt).Append("\n");
            sb.Append("  ScramblingCnt: ").Append(ScramblingCnt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DropLogFile);
        }

        /// <summary>
        /// Returns true if DropLogFile instances are equal
        /// </summary>
        /// <param name="input">Instance of DropLogFile to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DropLogFile input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Id == input.Id ||
                    this.Id.Equals(input.Id)
                ) && 
                (
                    this.ErrorCnt == input.ErrorCnt ||
                    this.ErrorCnt.Equals(input.ErrorCnt)
                ) && 
                (
                    this.DropCnt == input.DropCnt ||
                    this.DropCnt.Equals(input.DropCnt)
                ) && 
                (
                    this.ScramblingCnt == input.ScramblingCnt ||
                    this.ScramblingCnt.Equals(input.ScramblingCnt)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.Id.GetHashCode();
                hashCode = (hashCode * 59) + this.ErrorCnt.GetHashCode();
                hashCode = (hashCode * 59) + this.DropCnt.GetHashCode();
                hashCode = (hashCode * 59) + this.ScramblingCnt.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
