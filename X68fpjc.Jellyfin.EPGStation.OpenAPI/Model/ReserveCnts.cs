/*
 * epgstation
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.6.20
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.OpenAPIDateConverter;

namespace X68fpjc.Jellyfin.EPGStation.OpenAPI.Model
{
    /// <summary>
    /// 予約カウント
    /// </summary>
    [DataContract(Name = "ReserveCnts")]
    public partial class ReserveCnts : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ReserveCnts" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ReserveCnts() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ReserveCnts" /> class.
        /// </summary>
        /// <param name="normal">通常予約数 (required).</param>
        /// <param name="conflicts">競合予約数 (required).</param>
        /// <param name="skips">競合予約数 (required).</param>
        /// <param name="overlaps">重複予約数 (required).</param>
        public ReserveCnts(int normal = default, int conflicts = default, int skips = default, int overlaps = default)
        {
            this.Normal = normal;
            this.Conflicts = conflicts;
            this.Skips = skips;
            this.Overlaps = overlaps;
        }

        /// <summary>
        /// 通常予約数
        /// </summary>
        /// <value>通常予約数</value>
        [DataMember(Name = "normal", IsRequired = true, EmitDefaultValue = true)]
        public int Normal { get; set; }

        /// <summary>
        /// 競合予約数
        /// </summary>
        /// <value>競合予約数</value>
        [DataMember(Name = "conflicts", IsRequired = true, EmitDefaultValue = true)]
        public int Conflicts { get; set; }

        /// <summary>
        /// 競合予約数
        /// </summary>
        /// <value>競合予約数</value>
        [DataMember(Name = "skips", IsRequired = true, EmitDefaultValue = true)]
        public int Skips { get; set; }

        /// <summary>
        /// 重複予約数
        /// </summary>
        /// <value>重複予約数</value>
        [DataMember(Name = "overlaps", IsRequired = true, EmitDefaultValue = true)]
        public int Overlaps { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ReserveCnts {\n");
            sb.Append("  Normal: ").Append(Normal).Append("\n");
            sb.Append("  Conflicts: ").Append(Conflicts).Append("\n");
            sb.Append("  Skips: ").Append(Skips).Append("\n");
            sb.Append("  Overlaps: ").Append(Overlaps).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
