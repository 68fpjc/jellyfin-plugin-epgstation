/*
 * epgstation
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.6.20
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.OpenAPIDateConverter;

namespace X68fpjc.Jellyfin.EPGStation.OpenAPI.Model
{
    /// <summary>
    /// URL Scheme
    /// </summary>
    [DataContract(Name = "URLSchemeInfo")]
    public partial class URLSchemeInfo : IEquatable<URLSchemeInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="URLSchemeInfo" /> class.
        /// </summary>
        /// <param name="ios">ios.</param>
        /// <param name="android">android.</param>
        /// <param name="mac">mac.</param>
        /// <param name="win">win.</param>
        public URLSchemeInfo(string ios = default(string), string android = default(string), string mac = default(string), string win = default(string))
        {
            this.Ios = ios;
            this.Android = android;
            this.Mac = mac;
            this.Win = win;
        }

        /// <summary>
        /// Gets or Sets Ios
        /// </summary>
        [DataMember(Name = "ios", EmitDefaultValue = false)]
        public string Ios { get; set; }

        /// <summary>
        /// Gets or Sets Android
        /// </summary>
        [DataMember(Name = "android", EmitDefaultValue = false)]
        public string Android { get; set; }

        /// <summary>
        /// Gets or Sets Mac
        /// </summary>
        [DataMember(Name = "mac", EmitDefaultValue = false)]
        public string Mac { get; set; }

        /// <summary>
        /// Gets or Sets Win
        /// </summary>
        [DataMember(Name = "win", EmitDefaultValue = false)]
        public string Win { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class URLSchemeInfo {\n");
            sb.Append("  Ios: ").Append(Ios).Append("\n");
            sb.Append("  Android: ").Append(Android).Append("\n");
            sb.Append("  Mac: ").Append(Mac).Append("\n");
            sb.Append("  Win: ").Append(Win).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as URLSchemeInfo);
        }

        /// <summary>
        /// Returns true if URLSchemeInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of URLSchemeInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(URLSchemeInfo input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Ios == input.Ios ||
                    (this.Ios != null &&
                    this.Ios.Equals(input.Ios))
                ) && 
                (
                    this.Android == input.Android ||
                    (this.Android != null &&
                    this.Android.Equals(input.Android))
                ) && 
                (
                    this.Mac == input.Mac ||
                    (this.Mac != null &&
                    this.Mac.Equals(input.Mac))
                ) && 
                (
                    this.Win == input.Win ||
                    (this.Win != null &&
                    this.Win.Equals(input.Win))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Ios != null)
                {
                    hashCode = (hashCode * 59) + this.Ios.GetHashCode();
                }
                if (this.Android != null)
                {
                    hashCode = (hashCode * 59) + this.Android.GetHashCode();
                }
                if (this.Mac != null)
                {
                    hashCode = (hashCode * 59) + this.Mac.GetHashCode();
                }
                if (this.Win != null)
                {
                    hashCode = (hashCode * 59) + this.Win.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
