/*
 * epgstation
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.6.20
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.OpenAPIDateConverter;

namespace X68fpjc.Jellyfin.EPGStation.OpenAPI.Model
{
    /// <summary>
    /// ライブストリーミング設定
    /// </summary>
    [DataContract(Name = "Config_streamConfig_live")]
    public partial class ConfigStreamConfigLive : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ConfigStreamConfigLive" /> class.
        /// </summary>
        /// <param name="m2ts">ライブ M2TS ストリーミング設定.</param>
        /// <param name="m2tsll">ライブ M2TS Low Latency (mpegts.js 用) ストリーミング設定.</param>
        /// <param name="webm">ライブ WebM ストリーミング設定.</param>
        /// <param name="mp4">ライブ MP4 ストリーミング設定.</param>
        /// <param name="hls">ライブ HLS ストリーミング設定.</param>
        public ConfigStreamConfigLive(List<M2TSStreamParam> m2ts = default, List<string> m2tsll = default, List<string> webm = default, List<string> mp4 = default, List<string> hls = default)
        {
            this.M2ts = m2ts;
            this.M2tsll = m2tsll;
            this.Webm = webm;
            this.Mp4 = mp4;
            this.Hls = hls;
        }

        /// <summary>
        /// ライブ M2TS ストリーミング設定
        /// </summary>
        /// <value>ライブ M2TS ストリーミング設定</value>
        [DataMember(Name = "m2ts", EmitDefaultValue = false)]
        public List<M2TSStreamParam> M2ts { get; set; }

        /// <summary>
        /// ライブ M2TS Low Latency (mpegts.js 用) ストリーミング設定
        /// </summary>
        /// <value>ライブ M2TS Low Latency (mpegts.js 用) ストリーミング設定</value>
        [DataMember(Name = "m2tsll", EmitDefaultValue = false)]
        public List<string> M2tsll { get; set; }

        /// <summary>
        /// ライブ WebM ストリーミング設定
        /// </summary>
        /// <value>ライブ WebM ストリーミング設定</value>
        [DataMember(Name = "webm", EmitDefaultValue = false)]
        public List<string> Webm { get; set; }

        /// <summary>
        /// ライブ MP4 ストリーミング設定
        /// </summary>
        /// <value>ライブ MP4 ストリーミング設定</value>
        [DataMember(Name = "mp4", EmitDefaultValue = false)]
        public List<string> Mp4 { get; set; }

        /// <summary>
        /// ライブ HLS ストリーミング設定
        /// </summary>
        /// <value>ライブ HLS ストリーミング設定</value>
        [DataMember(Name = "hls", EmitDefaultValue = false)]
        public List<string> Hls { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ConfigStreamConfigLive {\n");
            sb.Append("  M2ts: ").Append(M2ts).Append("\n");
            sb.Append("  M2tsll: ").Append(M2tsll).Append("\n");
            sb.Append("  Webm: ").Append(Webm).Append("\n");
            sb.Append("  Mp4: ").Append(Mp4).Append("\n");
            sb.Append("  Hls: ").Append(Hls).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
