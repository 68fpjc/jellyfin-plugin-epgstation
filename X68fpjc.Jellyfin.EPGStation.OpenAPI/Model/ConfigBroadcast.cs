/*
 * epgstation
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.6.20
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.OpenAPIDateConverter;

namespace X68fpjc.Jellyfin.EPGStation.OpenAPI.Model
{
    /// <summary>
    /// 有効な放送波情報
    /// </summary>
    [DataContract(Name = "Config_broadcast")]
    public partial class ConfigBroadcast : IEquatable<ConfigBroadcast>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ConfigBroadcast" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ConfigBroadcast() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ConfigBroadcast" /> class.
        /// </summary>
        /// <param name="gR">gR (required).</param>
        /// <param name="bS">bS (required).</param>
        /// <param name="cS">cS (required).</param>
        /// <param name="sKY">sKY (required).</param>
        public ConfigBroadcast(bool gR = default(bool), bool bS = default(bool), bool cS = default(bool), bool sKY = default(bool))
        {
            this.GR = gR;
            this.BS = bS;
            this.CS = cS;
            this.SKY = sKY;
        }

        /// <summary>
        /// Gets or Sets GR
        /// </summary>
        [DataMember(Name = "GR", IsRequired = true, EmitDefaultValue = true)]
        public bool GR { get; set; }

        /// <summary>
        /// Gets or Sets BS
        /// </summary>
        [DataMember(Name = "BS", IsRequired = true, EmitDefaultValue = true)]
        public bool BS { get; set; }

        /// <summary>
        /// Gets or Sets CS
        /// </summary>
        [DataMember(Name = "CS", IsRequired = true, EmitDefaultValue = true)]
        public bool CS { get; set; }

        /// <summary>
        /// Gets or Sets SKY
        /// </summary>
        [DataMember(Name = "SKY", IsRequired = true, EmitDefaultValue = true)]
        public bool SKY { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ConfigBroadcast {\n");
            sb.Append("  GR: ").Append(GR).Append("\n");
            sb.Append("  BS: ").Append(BS).Append("\n");
            sb.Append("  CS: ").Append(CS).Append("\n");
            sb.Append("  SKY: ").Append(SKY).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ConfigBroadcast);
        }

        /// <summary>
        /// Returns true if ConfigBroadcast instances are equal
        /// </summary>
        /// <param name="input">Instance of ConfigBroadcast to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ConfigBroadcast input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.GR == input.GR ||
                    this.GR.Equals(input.GR)
                ) && 
                (
                    this.BS == input.BS ||
                    this.BS.Equals(input.BS)
                ) && 
                (
                    this.CS == input.CS ||
                    this.CS.Equals(input.CS)
                ) && 
                (
                    this.SKY == input.SKY ||
                    this.SKY.Equals(input.SKY)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.GR.GetHashCode();
                hashCode = (hashCode * 59) + this.BS.GetHashCode();
                hashCode = (hashCode * 59) + this.CS.GetHashCode();
                hashCode = (hashCode * 59) + this.SKY.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
