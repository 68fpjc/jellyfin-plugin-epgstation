/*
 * epgstation
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.6.20
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.OpenAPIDateConverter;

namespace X68fpjc.Jellyfin.EPGStation.OpenAPI.Model
{
    /// <summary>
    /// 予約保存オプション
    /// </summary>
    [DataContract(Name = "ReserveSaveOption")]
    public partial class ReserveSaveOption : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ReserveSaveOption" /> class.
        /// </summary>
        /// <param name="parentDirectoryName">親保存ディレクトリ.</param>
        /// <param name="directory">保存ディレクトリ.</param>
        /// <param name="recordedFormat">ファイル名フォーマット.</param>
        public ReserveSaveOption(string parentDirectoryName = default, string directory = default, string recordedFormat = default)
        {
            this.ParentDirectoryName = parentDirectoryName;
            this.Directory = directory;
            this.RecordedFormat = recordedFormat;
        }

        /// <summary>
        /// 親保存ディレクトリ
        /// </summary>
        /// <value>親保存ディレクトリ</value>
        [DataMember(Name = "parentDirectoryName", EmitDefaultValue = false)]
        public string ParentDirectoryName { get; set; }

        /// <summary>
        /// 保存ディレクトリ
        /// </summary>
        /// <value>保存ディレクトリ</value>
        [DataMember(Name = "directory", EmitDefaultValue = false)]
        public string Directory { get; set; }

        /// <summary>
        /// ファイル名フォーマット
        /// </summary>
        /// <value>ファイル名フォーマット</value>
        [DataMember(Name = "recordedFormat", EmitDefaultValue = false)]
        public string RecordedFormat { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ReserveSaveOption {\n");
            sb.Append("  ParentDirectoryName: ").Append(ParentDirectoryName).Append("\n");
            sb.Append("  Directory: ").Append(Directory).Append("\n");
            sb.Append("  RecordedFormat: ").Append(RecordedFormat).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
