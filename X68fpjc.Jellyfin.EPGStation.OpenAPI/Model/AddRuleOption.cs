/*
 * epgstation
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.6.20
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.OpenAPIDateConverter;

namespace X68fpjc.Jellyfin.EPGStation.OpenAPI.Model
{
    /// <summary>
    /// ルール追加プション
    /// </summary>
    [DataContract(Name = "AddRuleOption")]
    public partial class AddRuleOption : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AddRuleOption" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AddRuleOption() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AddRuleOption" /> class.
        /// </summary>
        /// <param name="isTimeSpecification">時刻指定予約か (required).</param>
        /// <param name="searchOption">searchOption (required).</param>
        /// <param name="reserveOption">reserveOption (required).</param>
        /// <param name="saveOption">saveOption.</param>
        /// <param name="encodeOption">encodeOption.</param>
        public AddRuleOption(bool isTimeSpecification = default, RuleSearchOption searchOption = default, RuleReserveOption reserveOption = default, ReserveSaveOption saveOption = default, ReserveEncodedOption encodeOption = default)
        {
            this.IsTimeSpecification = isTimeSpecification;
            // to ensure "searchOption" is required (not null)
            if (searchOption == null)
            {
                throw new ArgumentNullException("searchOption is a required property for AddRuleOption and cannot be null");
            }
            this.SearchOption = searchOption;
            // to ensure "reserveOption" is required (not null)
            if (reserveOption == null)
            {
                throw new ArgumentNullException("reserveOption is a required property for AddRuleOption and cannot be null");
            }
            this.ReserveOption = reserveOption;
            this.SaveOption = saveOption;
            this.EncodeOption = encodeOption;
        }

        /// <summary>
        /// 時刻指定予約か
        /// </summary>
        /// <value>時刻指定予約か</value>
        [DataMember(Name = "isTimeSpecification", IsRequired = true, EmitDefaultValue = true)]
        public bool IsTimeSpecification { get; set; }

        /// <summary>
        /// Gets or Sets SearchOption
        /// </summary>
        [DataMember(Name = "searchOption", IsRequired = true, EmitDefaultValue = true)]
        public RuleSearchOption SearchOption { get; set; }

        /// <summary>
        /// Gets or Sets ReserveOption
        /// </summary>
        [DataMember(Name = "reserveOption", IsRequired = true, EmitDefaultValue = true)]
        public RuleReserveOption ReserveOption { get; set; }

        /// <summary>
        /// Gets or Sets SaveOption
        /// </summary>
        [DataMember(Name = "saveOption", EmitDefaultValue = false)]
        public ReserveSaveOption SaveOption { get; set; }

        /// <summary>
        /// Gets or Sets EncodeOption
        /// </summary>
        [DataMember(Name = "encodeOption", EmitDefaultValue = false)]
        public ReserveEncodedOption EncodeOption { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AddRuleOption {\n");
            sb.Append("  IsTimeSpecification: ").Append(IsTimeSpecification).Append("\n");
            sb.Append("  SearchOption: ").Append(SearchOption).Append("\n");
            sb.Append("  ReserveOption: ").Append(ReserveOption).Append("\n");
            sb.Append("  SaveOption: ").Append(SaveOption).Append("\n");
            sb.Append("  EncodeOption: ").Append(EncodeOption).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
