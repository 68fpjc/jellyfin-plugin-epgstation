/*
 * epgstation
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.6.20
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using X68fpjc.Jellyfin.EPGStation.OpenAPI.Client;
using X68fpjc.Jellyfin.EPGStation.OpenAPI.Model;

namespace X68fpjc.Jellyfin.EPGStation.OpenAPI.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ITagsApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// タグ情報取得
        /// </summary>
        /// <remarks>
        /// タグ情報を取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="offset">offset (optional, default to 0)</param>
        /// <param name="limit">limit (optional, default to 24)</param>
        /// <param name="name">name (optional)</param>
        /// <param name="excludeTagId">除外する RecordedTagId (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>RecordedTags</returns>
        RecordedTags TagsGet(int? offset = default, int? limit = default, string? name = default, List<string>? excludeTagId = default, int operationIndex = 0);

        /// <summary>
        /// タグ情報取得
        /// </summary>
        /// <remarks>
        /// タグ情報を取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="offset">offset (optional, default to 0)</param>
        /// <param name="limit">limit (optional, default to 24)</param>
        /// <param name="name">name (optional)</param>
        /// <param name="excludeTagId">除外する RecordedTagId (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of RecordedTags</returns>
        ApiResponse<RecordedTags> TagsGetWithHttpInfo(int? offset = default, int? limit = default, string? name = default, List<string>? excludeTagId = default, int operationIndex = 0);
        /// <summary>
        /// タグ追加
        /// </summary>
        /// <remarks>
        /// タグを追加する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addRecordedTagOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>AddedRecordedTag</returns>
        AddedRecordedTag TagsPost(AddRecordedTagOption addRecordedTagOption, int operationIndex = 0);

        /// <summary>
        /// タグ追加
        /// </summary>
        /// <remarks>
        /// タグを追加する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addRecordedTagOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of AddedRecordedTag</returns>
        ApiResponse<AddedRecordedTag> TagsPostWithHttpInfo(AddRecordedTagOption addRecordedTagOption, int operationIndex = 0);
        /// <summary>
        /// タグ削除
        /// </summary>
        /// <remarks>
        /// タグを削除する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        void TagsTagIdDelete(int tagId, int operationIndex = 0);

        /// <summary>
        /// タグ削除
        /// </summary>
        /// <remarks>
        /// タグを削除する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> TagsTagIdDeleteWithHttpInfo(int tagId, int operationIndex = 0);
        /// <summary>
        /// タグ名変更
        /// </summary>
        /// <remarks>
        /// タグ名を変更する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="addRecordedTagOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        void TagsTagIdPut(int tagId, AddRecordedTagOption addRecordedTagOption, int operationIndex = 0);

        /// <summary>
        /// タグ名変更
        /// </summary>
        /// <remarks>
        /// タグ名を変更する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="addRecordedTagOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> TagsTagIdPutWithHttpInfo(int tagId, AddRecordedTagOption addRecordedTagOption, int operationIndex = 0);
        /// <summary>
        /// 録画番組とタグの関連付けを削除
        /// </summary>
        /// <remarks>
        /// 録画番組とタグの関連付けを削除する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="recordedId">recorded id (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        void TagsTagIdRelateDelete(int tagId, int? recordedId = default, int operationIndex = 0);

        /// <summary>
        /// 録画番組とタグの関連付けを削除
        /// </summary>
        /// <remarks>
        /// 録画番組とタグの関連付けを削除する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="recordedId">recorded id (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> TagsTagIdRelateDeleteWithHttpInfo(int tagId, int? recordedId = default, int operationIndex = 0);
        /// <summary>
        /// 録画番組とタグを関連付ける
        /// </summary>
        /// <remarks>
        /// 録画番組とタグを関連付けする
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="relateRecordedTagOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        void TagsTagIdRelatePut(int tagId, RelateRecordedTagOption relateRecordedTagOption, int operationIndex = 0);

        /// <summary>
        /// 録画番組とタグを関連付ける
        /// </summary>
        /// <remarks>
        /// 録画番組とタグを関連付けする
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="relateRecordedTagOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> TagsTagIdRelatePutWithHttpInfo(int tagId, RelateRecordedTagOption relateRecordedTagOption, int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ITagsApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// タグ情報取得
        /// </summary>
        /// <remarks>
        /// タグ情報を取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="offset">offset (optional, default to 0)</param>
        /// <param name="limit">limit (optional, default to 24)</param>
        /// <param name="name">name (optional)</param>
        /// <param name="excludeTagId">除外する RecordedTagId (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of RecordedTags</returns>
        System.Threading.Tasks.Task<RecordedTags> TagsGetAsync(int? offset = default, int? limit = default, string? name = default, List<string>? excludeTagId = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// タグ情報取得
        /// </summary>
        /// <remarks>
        /// タグ情報を取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="offset">offset (optional, default to 0)</param>
        /// <param name="limit">limit (optional, default to 24)</param>
        /// <param name="name">name (optional)</param>
        /// <param name="excludeTagId">除外する RecordedTagId (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (RecordedTags)</returns>
        System.Threading.Tasks.Task<ApiResponse<RecordedTags>> TagsGetWithHttpInfoAsync(int? offset = default, int? limit = default, string? name = default, List<string>? excludeTagId = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        /// <summary>
        /// タグ追加
        /// </summary>
        /// <remarks>
        /// タグを追加する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addRecordedTagOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of AddedRecordedTag</returns>
        System.Threading.Tasks.Task<AddedRecordedTag> TagsPostAsync(AddRecordedTagOption addRecordedTagOption, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// タグ追加
        /// </summary>
        /// <remarks>
        /// タグを追加する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addRecordedTagOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (AddedRecordedTag)</returns>
        System.Threading.Tasks.Task<ApiResponse<AddedRecordedTag>> TagsPostWithHttpInfoAsync(AddRecordedTagOption addRecordedTagOption, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        /// <summary>
        /// タグ削除
        /// </summary>
        /// <remarks>
        /// タグを削除する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task TagsTagIdDeleteAsync(int tagId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// タグ削除
        /// </summary>
        /// <remarks>
        /// タグを削除する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> TagsTagIdDeleteWithHttpInfoAsync(int tagId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        /// <summary>
        /// タグ名変更
        /// </summary>
        /// <remarks>
        /// タグ名を変更する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="addRecordedTagOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task TagsTagIdPutAsync(int tagId, AddRecordedTagOption addRecordedTagOption, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// タグ名変更
        /// </summary>
        /// <remarks>
        /// タグ名を変更する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="addRecordedTagOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> TagsTagIdPutWithHttpInfoAsync(int tagId, AddRecordedTagOption addRecordedTagOption, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        /// <summary>
        /// 録画番組とタグの関連付けを削除
        /// </summary>
        /// <remarks>
        /// 録画番組とタグの関連付けを削除する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="recordedId">recorded id (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task TagsTagIdRelateDeleteAsync(int tagId, int? recordedId = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// 録画番組とタグの関連付けを削除
        /// </summary>
        /// <remarks>
        /// 録画番組とタグの関連付けを削除する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="recordedId">recorded id (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> TagsTagIdRelateDeleteWithHttpInfoAsync(int tagId, int? recordedId = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        /// <summary>
        /// 録画番組とタグを関連付ける
        /// </summary>
        /// <remarks>
        /// 録画番組とタグを関連付けする
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="relateRecordedTagOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task TagsTagIdRelatePutAsync(int tagId, RelateRecordedTagOption relateRecordedTagOption, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// 録画番組とタグを関連付ける
        /// </summary>
        /// <remarks>
        /// 録画番組とタグを関連付けする
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="relateRecordedTagOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> TagsTagIdRelatePutWithHttpInfoAsync(int tagId, RelateRecordedTagOption relateRecordedTagOption, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ITagsApi : ITagsApiSync, ITagsApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class TagsApi : ITagsApi
    {
        private X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="TagsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public TagsApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="TagsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public TagsApi(string basePath)
        {
            this.Configuration = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.Configuration.MergeConfigurations(
                X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.GlobalConfiguration.Instance,
                new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.Configuration { BasePath = basePath }
            );
            this.Client = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="TagsApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public TagsApi(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.Configuration.MergeConfigurations(
                X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="TagsApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public TagsApi(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ISynchronousClient client, X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.IAsynchronousClient asyncClient, X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// タグ情報取得 タグ情報を取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="offset">offset (optional, default to 0)</param>
        /// <param name="limit">limit (optional, default to 24)</param>
        /// <param name="name">name (optional)</param>
        /// <param name="excludeTagId">除外する RecordedTagId (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>RecordedTags</returns>
        public RecordedTags TagsGet(int? offset = default, int? limit = default, string? name = default, List<string>? excludeTagId = default, int operationIndex = 0)
        {
            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<RecordedTags> localVarResponse = TagsGetWithHttpInfo(offset, limit, name, excludeTagId);
            return localVarResponse.Data;
        }

        /// <summary>
        /// タグ情報取得 タグ情報を取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="offset">offset (optional, default to 0)</param>
        /// <param name="limit">limit (optional, default to 24)</param>
        /// <param name="name">name (optional)</param>
        /// <param name="excludeTagId">除外する RecordedTagId (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of RecordedTags</returns>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<RecordedTags> TagsGetWithHttpInfo(int? offset = default, int? limit = default, string? name = default, List<string>? excludeTagId = default, int operationIndex = 0)
        {
            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (offset != null)
            {
                localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "offset", offset));
            }
            if (limit != null)
            {
                localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "limit", limit));
            }
            if (name != null)
            {
                localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "name", name));
            }
            if (excludeTagId != null)
            {
                localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("multi", "excludeTagId", excludeTagId));
            }

            localVarRequestOptions.Operation = "TagsApi.TagsGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<RecordedTags>("/tags", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("TagsGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// タグ情報取得 タグ情報を取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="offset">offset (optional, default to 0)</param>
        /// <param name="limit">limit (optional, default to 24)</param>
        /// <param name="name">name (optional)</param>
        /// <param name="excludeTagId">除外する RecordedTagId (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of RecordedTags</returns>
        public async System.Threading.Tasks.Task<RecordedTags> TagsGetAsync(int? offset = default, int? limit = default, string? name = default, List<string>? excludeTagId = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<RecordedTags> localVarResponse = await TagsGetWithHttpInfoAsync(offset, limit, name, excludeTagId, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// タグ情報取得 タグ情報を取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="offset">offset (optional, default to 0)</param>
        /// <param name="limit">limit (optional, default to 24)</param>
        /// <param name="name">name (optional)</param>
        /// <param name="excludeTagId">除外する RecordedTagId (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (RecordedTags)</returns>
        public async System.Threading.Tasks.Task<X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<RecordedTags>> TagsGetWithHttpInfoAsync(int? offset = default, int? limit = default, string? name = default, List<string>? excludeTagId = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {

            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (offset != null)
            {
                localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "offset", offset));
            }
            if (limit != null)
            {
                localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "limit", limit));
            }
            if (name != null)
            {
                localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "name", name));
            }
            if (excludeTagId != null)
            {
                localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("multi", "excludeTagId", excludeTagId));
            }

            localVarRequestOptions.Operation = "TagsApi.TagsGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<RecordedTags>("/tags", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("TagsGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// タグ追加 タグを追加する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addRecordedTagOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>AddedRecordedTag</returns>
        public AddedRecordedTag TagsPost(AddRecordedTagOption addRecordedTagOption, int operationIndex = 0)
        {
            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<AddedRecordedTag> localVarResponse = TagsPostWithHttpInfo(addRecordedTagOption);
            return localVarResponse.Data;
        }

        /// <summary>
        /// タグ追加 タグを追加する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addRecordedTagOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of AddedRecordedTag</returns>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<AddedRecordedTag> TagsPostWithHttpInfo(AddRecordedTagOption addRecordedTagOption, int operationIndex = 0)
        {
            // verify the required parameter 'addRecordedTagOption' is set
            if (addRecordedTagOption == null)
            {
                throw new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException(400, "Missing required parameter 'addRecordedTagOption' when calling TagsApi->TagsPost");
            }

            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = addRecordedTagOption;

            localVarRequestOptions.Operation = "TagsApi.TagsPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<AddedRecordedTag>("/tags", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("TagsPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// タグ追加 タグを追加する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addRecordedTagOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of AddedRecordedTag</returns>
        public async System.Threading.Tasks.Task<AddedRecordedTag> TagsPostAsync(AddRecordedTagOption addRecordedTagOption, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<AddedRecordedTag> localVarResponse = await TagsPostWithHttpInfoAsync(addRecordedTagOption, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// タグ追加 タグを追加する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="addRecordedTagOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (AddedRecordedTag)</returns>
        public async System.Threading.Tasks.Task<X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<AddedRecordedTag>> TagsPostWithHttpInfoAsync(AddRecordedTagOption addRecordedTagOption, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'addRecordedTagOption' is set
            if (addRecordedTagOption == null)
            {
                throw new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException(400, "Missing required parameter 'addRecordedTagOption' when calling TagsApi->TagsPost");
            }


            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = addRecordedTagOption;

            localVarRequestOptions.Operation = "TagsApi.TagsPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<AddedRecordedTag>("/tags", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("TagsPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// タグ削除 タグを削除する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        public void TagsTagIdDelete(int tagId, int operationIndex = 0)
        {
            TagsTagIdDeleteWithHttpInfo(tagId);
        }

        /// <summary>
        /// タグ削除 タグを削除する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<Object> TagsTagIdDeleteWithHttpInfo(int tagId, int operationIndex = 0)
        {
            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("tagId", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(tagId)); // path parameter

            localVarRequestOptions.Operation = "TagsApi.TagsTagIdDelete";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Delete<Object>("/tags/{tagId}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("TagsTagIdDelete", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// タグ削除 タグを削除する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task TagsTagIdDeleteAsync(int tagId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            await TagsTagIdDeleteWithHttpInfoAsync(tagId, operationIndex, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// タグ削除 タグを削除する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<Object>> TagsTagIdDeleteWithHttpInfoAsync(int tagId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {

            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("tagId", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(tagId)); // path parameter

            localVarRequestOptions.Operation = "TagsApi.TagsTagIdDelete";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.DeleteAsync<Object>("/tags/{tagId}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("TagsTagIdDelete", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// タグ名変更 タグ名を変更する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="addRecordedTagOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        public void TagsTagIdPut(int tagId, AddRecordedTagOption addRecordedTagOption, int operationIndex = 0)
        {
            TagsTagIdPutWithHttpInfo(tagId, addRecordedTagOption);
        }

        /// <summary>
        /// タグ名変更 タグ名を変更する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="addRecordedTagOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<Object> TagsTagIdPutWithHttpInfo(int tagId, AddRecordedTagOption addRecordedTagOption, int operationIndex = 0)
        {
            // verify the required parameter 'addRecordedTagOption' is set
            if (addRecordedTagOption == null)
            {
                throw new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException(400, "Missing required parameter 'addRecordedTagOption' when calling TagsApi->TagsTagIdPut");
            }

            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("tagId", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(tagId)); // path parameter
            localVarRequestOptions.Data = addRecordedTagOption;

            localVarRequestOptions.Operation = "TagsApi.TagsTagIdPut";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Put<Object>("/tags/{tagId}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("TagsTagIdPut", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// タグ名変更 タグ名を変更する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="addRecordedTagOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task TagsTagIdPutAsync(int tagId, AddRecordedTagOption addRecordedTagOption, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            await TagsTagIdPutWithHttpInfoAsync(tagId, addRecordedTagOption, operationIndex, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// タグ名変更 タグ名を変更する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="addRecordedTagOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<Object>> TagsTagIdPutWithHttpInfoAsync(int tagId, AddRecordedTagOption addRecordedTagOption, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'addRecordedTagOption' is set
            if (addRecordedTagOption == null)
            {
                throw new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException(400, "Missing required parameter 'addRecordedTagOption' when calling TagsApi->TagsTagIdPut");
            }


            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("tagId", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(tagId)); // path parameter
            localVarRequestOptions.Data = addRecordedTagOption;

            localVarRequestOptions.Operation = "TagsApi.TagsTagIdPut";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PutAsync<Object>("/tags/{tagId}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("TagsTagIdPut", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 録画番組とタグの関連付けを削除 録画番組とタグの関連付けを削除する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="recordedId">recorded id (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        public void TagsTagIdRelateDelete(int tagId, int? recordedId = default, int operationIndex = 0)
        {
            TagsTagIdRelateDeleteWithHttpInfo(tagId, recordedId);
        }

        /// <summary>
        /// 録画番組とタグの関連付けを削除 録画番組とタグの関連付けを削除する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="recordedId">recorded id (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<Object> TagsTagIdRelateDeleteWithHttpInfo(int tagId, int? recordedId = default, int operationIndex = 0)
        {
            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("tagId", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(tagId)); // path parameter
            if (recordedId != null)
            {
                localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "recordedId", recordedId));
            }

            localVarRequestOptions.Operation = "TagsApi.TagsTagIdRelateDelete";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Delete<Object>("/tags/{tagId}/relate", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("TagsTagIdRelateDelete", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 録画番組とタグの関連付けを削除 録画番組とタグの関連付けを削除する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="recordedId">recorded id (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task TagsTagIdRelateDeleteAsync(int tagId, int? recordedId = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            await TagsTagIdRelateDeleteWithHttpInfoAsync(tagId, recordedId, operationIndex, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// 録画番組とタグの関連付けを削除 録画番組とタグの関連付けを削除する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="recordedId">recorded id (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<Object>> TagsTagIdRelateDeleteWithHttpInfoAsync(int tagId, int? recordedId = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {

            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("tagId", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(tagId)); // path parameter
            if (recordedId != null)
            {
                localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "recordedId", recordedId));
            }

            localVarRequestOptions.Operation = "TagsApi.TagsTagIdRelateDelete";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.DeleteAsync<Object>("/tags/{tagId}/relate", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("TagsTagIdRelateDelete", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 録画番組とタグを関連付ける 録画番組とタグを関連付けする
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="relateRecordedTagOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        public void TagsTagIdRelatePut(int tagId, RelateRecordedTagOption relateRecordedTagOption, int operationIndex = 0)
        {
            TagsTagIdRelatePutWithHttpInfo(tagId, relateRecordedTagOption);
        }

        /// <summary>
        /// 録画番組とタグを関連付ける 録画番組とタグを関連付けする
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="relateRecordedTagOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<Object> TagsTagIdRelatePutWithHttpInfo(int tagId, RelateRecordedTagOption relateRecordedTagOption, int operationIndex = 0)
        {
            // verify the required parameter 'relateRecordedTagOption' is set
            if (relateRecordedTagOption == null)
            {
                throw new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException(400, "Missing required parameter 'relateRecordedTagOption' when calling TagsApi->TagsTagIdRelatePut");
            }

            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("tagId", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(tagId)); // path parameter
            localVarRequestOptions.Data = relateRecordedTagOption;

            localVarRequestOptions.Operation = "TagsApi.TagsTagIdRelatePut";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Put<Object>("/tags/{tagId}/relate", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("TagsTagIdRelatePut", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 録画番組とタグを関連付ける 録画番組とタグを関連付けする
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="relateRecordedTagOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task TagsTagIdRelatePutAsync(int tagId, RelateRecordedTagOption relateRecordedTagOption, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            await TagsTagIdRelatePutWithHttpInfoAsync(tagId, relateRecordedTagOption, operationIndex, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// 録画番組とタグを関連付ける 録画番組とタグを関連付けする
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="tagId">recorded tag id</param>
        /// <param name="relateRecordedTagOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<Object>> TagsTagIdRelatePutWithHttpInfoAsync(int tagId, RelateRecordedTagOption relateRecordedTagOption, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'relateRecordedTagOption' is set
            if (relateRecordedTagOption == null)
            {
                throw new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException(400, "Missing required parameter 'relateRecordedTagOption' when calling TagsApi->TagsTagIdRelatePut");
            }


            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("tagId", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(tagId)); // path parameter
            localVarRequestOptions.Data = relateRecordedTagOption;

            localVarRequestOptions.Operation = "TagsApi.TagsTagIdRelatePut";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PutAsync<Object>("/tags/{tagId}/relate", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("TagsTagIdRelatePut", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
