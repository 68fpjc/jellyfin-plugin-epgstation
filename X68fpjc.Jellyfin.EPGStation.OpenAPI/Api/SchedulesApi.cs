/*
 * epgstation
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.6.20
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using X68fpjc.Jellyfin.EPGStation.OpenAPI.Client;
using X68fpjc.Jellyfin.EPGStation.OpenAPI.Model;

namespace X68fpjc.Jellyfin.EPGStation.OpenAPI.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ISchedulesApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// 放映中の番組情報取得
        /// </summary>
        /// <remarks>
        /// 放映中の番組情報を取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="time">追加時間 (ms) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;Schedule&gt;</returns>
        List<Schedule> SchedulesBroadcastingGet(bool isHalfWidth, long? time = default, int operationIndex = 0);

        /// <summary>
        /// 放映中の番組情報取得
        /// </summary>
        /// <remarks>
        /// 放映中の番組情報を取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="time">追加時間 (ms) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;Schedule&gt;</returns>
        ApiResponse<List<Schedule>> SchedulesBroadcastingGetWithHttpInfo(bool isHalfWidth, long? time = default, int operationIndex = 0);
        /// <summary>
        /// 指定された放送局の番組表情報取得
        /// </summary>
        /// <remarks>
        /// 指定された放送局の番組表情報を取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="channelId">放送局 id</param>
        /// <param name="startAt">開始時刻</param>
        /// <param name="days">取得日数</param>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="needsRawExtended">rawExtended が必要か (optional)</param>
        /// <param name="isFree">無料放送のみ取得するか (true: 無料放送, false: 有料放送, 無指定: 全て) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;Schedule&gt;</returns>
        List<Schedule> SchedulesChannelIdGet(long channelId, long startAt, int days, bool isHalfWidth, bool? needsRawExtended = default, bool? isFree = default, int operationIndex = 0);

        /// <summary>
        /// 指定された放送局の番組表情報取得
        /// </summary>
        /// <remarks>
        /// 指定された放送局の番組表情報を取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="channelId">放送局 id</param>
        /// <param name="startAt">開始時刻</param>
        /// <param name="days">取得日数</param>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="needsRawExtended">rawExtended が必要か (optional)</param>
        /// <param name="isFree">無料放送のみ取得するか (true: 無料放送, false: 有料放送, 無指定: 全て) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;Schedule&gt;</returns>
        ApiResponse<List<Schedule>> SchedulesChannelIdGetWithHttpInfo(long channelId, long startAt, int days, bool isHalfWidth, bool? needsRawExtended = default, bool? isFree = default, int operationIndex = 0);
        /// <summary>
        /// 指定された番組表情報取得
        /// </summary>
        /// <remarks>
        /// 指定された番組表情報を取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="programId">program id</param>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ScheduleProgramItem</returns>
        ScheduleProgramItem SchedulesDetailProgramIdGet(long programId, bool isHalfWidth, int operationIndex = 0);

        /// <summary>
        /// 指定された番組表情報取得
        /// </summary>
        /// <remarks>
        /// 指定された番組表情報を取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="programId">program id</param>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ScheduleProgramItem</returns>
        ApiResponse<ScheduleProgramItem> SchedulesDetailProgramIdGetWithHttpInfo(long programId, bool isHalfWidth, int operationIndex = 0);
        /// <summary>
        /// 番組表情報取得
        /// </summary>
        /// <remarks>
        /// 番組表情報を取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="startAt">開始時刻</param>
        /// <param name="endAt">終了時刻</param>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="GR">GR</param>
        /// <param name="BS">BS</param>
        /// <param name="CS">CS</param>
        /// <param name="SKY">SKY</param>
        /// <param name="needsRawExtended">rawExtended が必要か (optional)</param>
        /// <param name="isFree">無料放送のみ取得するか (true: 無料放送, false: 有料放送, 無指定: 全て) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;Schedule&gt;</returns>
        List<Schedule> SchedulesGet(long startAt, long endAt, bool isHalfWidth, bool GR, bool BS, bool CS, bool SKY, bool? needsRawExtended = default, bool? isFree = default, int operationIndex = 0);

        /// <summary>
        /// 番組表情報取得
        /// </summary>
        /// <remarks>
        /// 番組表情報を取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="startAt">開始時刻</param>
        /// <param name="endAt">終了時刻</param>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="GR">GR</param>
        /// <param name="BS">BS</param>
        /// <param name="CS">CS</param>
        /// <param name="SKY">SKY</param>
        /// <param name="needsRawExtended">rawExtended が必要か (optional)</param>
        /// <param name="isFree">無料放送のみ取得するか (true: 無料放送, false: 有料放送, 無指定: 全て) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;Schedule&gt;</returns>
        ApiResponse<List<Schedule>> SchedulesGetWithHttpInfo(long startAt, long endAt, bool isHalfWidth, bool GR, bool BS, bool CS, bool SKY, bool? needsRawExtended = default, bool? isFree = default, int operationIndex = 0);
        /// <summary>
        /// 番組検索結果を取得
        /// </summary>
        /// <remarks>
        /// 番組検索結果を取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scheduleSearchOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;ScheduleProgramItem&gt;</returns>
        List<ScheduleProgramItem> SchedulesSearchPost(ScheduleSearchOption scheduleSearchOption, int operationIndex = 0);

        /// <summary>
        /// 番組検索結果を取得
        /// </summary>
        /// <remarks>
        /// 番組検索結果を取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scheduleSearchOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;ScheduleProgramItem&gt;</returns>
        ApiResponse<List<ScheduleProgramItem>> SchedulesSearchPostWithHttpInfo(ScheduleSearchOption scheduleSearchOption, int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ISchedulesApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// 放映中の番組情報取得
        /// </summary>
        /// <remarks>
        /// 放映中の番組情報を取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="time">追加時間 (ms) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;Schedule&gt;</returns>
        System.Threading.Tasks.Task<List<Schedule>> SchedulesBroadcastingGetAsync(bool isHalfWidth, long? time = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// 放映中の番組情報取得
        /// </summary>
        /// <remarks>
        /// 放映中の番組情報を取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="time">追加時間 (ms) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;Schedule&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<Schedule>>> SchedulesBroadcastingGetWithHttpInfoAsync(bool isHalfWidth, long? time = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        /// <summary>
        /// 指定された放送局の番組表情報取得
        /// </summary>
        /// <remarks>
        /// 指定された放送局の番組表情報を取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="channelId">放送局 id</param>
        /// <param name="startAt">開始時刻</param>
        /// <param name="days">取得日数</param>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="needsRawExtended">rawExtended が必要か (optional)</param>
        /// <param name="isFree">無料放送のみ取得するか (true: 無料放送, false: 有料放送, 無指定: 全て) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;Schedule&gt;</returns>
        System.Threading.Tasks.Task<List<Schedule>> SchedulesChannelIdGetAsync(long channelId, long startAt, int days, bool isHalfWidth, bool? needsRawExtended = default, bool? isFree = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// 指定された放送局の番組表情報取得
        /// </summary>
        /// <remarks>
        /// 指定された放送局の番組表情報を取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="channelId">放送局 id</param>
        /// <param name="startAt">開始時刻</param>
        /// <param name="days">取得日数</param>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="needsRawExtended">rawExtended が必要か (optional)</param>
        /// <param name="isFree">無料放送のみ取得するか (true: 無料放送, false: 有料放送, 無指定: 全て) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;Schedule&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<Schedule>>> SchedulesChannelIdGetWithHttpInfoAsync(long channelId, long startAt, int days, bool isHalfWidth, bool? needsRawExtended = default, bool? isFree = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        /// <summary>
        /// 指定された番組表情報取得
        /// </summary>
        /// <remarks>
        /// 指定された番組表情報を取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="programId">program id</param>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ScheduleProgramItem</returns>
        System.Threading.Tasks.Task<ScheduleProgramItem> SchedulesDetailProgramIdGetAsync(long programId, bool isHalfWidth, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// 指定された番組表情報取得
        /// </summary>
        /// <remarks>
        /// 指定された番組表情報を取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="programId">program id</param>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ScheduleProgramItem)</returns>
        System.Threading.Tasks.Task<ApiResponse<ScheduleProgramItem>> SchedulesDetailProgramIdGetWithHttpInfoAsync(long programId, bool isHalfWidth, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        /// <summary>
        /// 番組表情報取得
        /// </summary>
        /// <remarks>
        /// 番組表情報を取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="startAt">開始時刻</param>
        /// <param name="endAt">終了時刻</param>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="GR">GR</param>
        /// <param name="BS">BS</param>
        /// <param name="CS">CS</param>
        /// <param name="SKY">SKY</param>
        /// <param name="needsRawExtended">rawExtended が必要か (optional)</param>
        /// <param name="isFree">無料放送のみ取得するか (true: 無料放送, false: 有料放送, 無指定: 全て) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;Schedule&gt;</returns>
        System.Threading.Tasks.Task<List<Schedule>> SchedulesGetAsync(long startAt, long endAt, bool isHalfWidth, bool GR, bool BS, bool CS, bool SKY, bool? needsRawExtended = default, bool? isFree = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// 番組表情報取得
        /// </summary>
        /// <remarks>
        /// 番組表情報を取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="startAt">開始時刻</param>
        /// <param name="endAt">終了時刻</param>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="GR">GR</param>
        /// <param name="BS">BS</param>
        /// <param name="CS">CS</param>
        /// <param name="SKY">SKY</param>
        /// <param name="needsRawExtended">rawExtended が必要か (optional)</param>
        /// <param name="isFree">無料放送のみ取得するか (true: 無料放送, false: 有料放送, 無指定: 全て) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;Schedule&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<Schedule>>> SchedulesGetWithHttpInfoAsync(long startAt, long endAt, bool isHalfWidth, bool GR, bool BS, bool CS, bool SKY, bool? needsRawExtended = default, bool? isFree = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        /// <summary>
        /// 番組検索結果を取得
        /// </summary>
        /// <remarks>
        /// 番組検索結果を取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scheduleSearchOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;ScheduleProgramItem&gt;</returns>
        System.Threading.Tasks.Task<List<ScheduleProgramItem>> SchedulesSearchPostAsync(ScheduleSearchOption scheduleSearchOption, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);

        /// <summary>
        /// 番組検索結果を取得
        /// </summary>
        /// <remarks>
        /// 番組検索結果を取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scheduleSearchOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;ScheduleProgramItem&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<ScheduleProgramItem>>> SchedulesSearchPostWithHttpInfoAsync(ScheduleSearchOption scheduleSearchOption, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default);
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ISchedulesApi : ISchedulesApiSync, ISchedulesApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class SchedulesApi : ISchedulesApi
    {
        private X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="SchedulesApi"/> class.
        /// </summary>
        /// <returns></returns>
        public SchedulesApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="SchedulesApi"/> class.
        /// </summary>
        /// <returns></returns>
        public SchedulesApi(string basePath)
        {
            this.Configuration = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.Configuration.MergeConfigurations(
                X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.GlobalConfiguration.Instance,
                new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.Configuration { BasePath = basePath }
            );
            this.Client = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="SchedulesApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public SchedulesApi(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.Configuration.MergeConfigurations(
                X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="SchedulesApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public SchedulesApi(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ISynchronousClient client, X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.IAsynchronousClient asyncClient, X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// 放映中の番組情報取得 放映中の番組情報を取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="time">追加時間 (ms) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;Schedule&gt;</returns>
        public List<Schedule> SchedulesBroadcastingGet(bool isHalfWidth, long? time = default, int operationIndex = 0)
        {
            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<List<Schedule>> localVarResponse = SchedulesBroadcastingGetWithHttpInfo(isHalfWidth, time);
            return localVarResponse.Data;
        }

        /// <summary>
        /// 放映中の番組情報取得 放映中の番組情報を取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="time">追加時間 (ms) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;Schedule&gt;</returns>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<List<Schedule>> SchedulesBroadcastingGetWithHttpInfo(bool isHalfWidth, long? time = default, int operationIndex = 0)
        {
            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (time != null)
            {
                localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "time", time));
            }
            localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "isHalfWidth", isHalfWidth));

            localVarRequestOptions.Operation = "SchedulesApi.SchedulesBroadcastingGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<Schedule>>("/schedules/broadcasting", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SchedulesBroadcastingGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 放映中の番組情報取得 放映中の番組情報を取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="time">追加時間 (ms) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;Schedule&gt;</returns>
        public async System.Threading.Tasks.Task<List<Schedule>> SchedulesBroadcastingGetAsync(bool isHalfWidth, long? time = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<List<Schedule>> localVarResponse = await SchedulesBroadcastingGetWithHttpInfoAsync(isHalfWidth, time, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// 放映中の番組情報取得 放映中の番組情報を取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="time">追加時間 (ms) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;Schedule&gt;)</returns>
        public async System.Threading.Tasks.Task<X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<List<Schedule>>> SchedulesBroadcastingGetWithHttpInfoAsync(bool isHalfWidth, long? time = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {

            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (time != null)
            {
                localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "time", time));
            }
            localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "isHalfWidth", isHalfWidth));

            localVarRequestOptions.Operation = "SchedulesApi.SchedulesBroadcastingGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<Schedule>>("/schedules/broadcasting", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SchedulesBroadcastingGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 指定された放送局の番組表情報取得 指定された放送局の番組表情報を取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="channelId">放送局 id</param>
        /// <param name="startAt">開始時刻</param>
        /// <param name="days">取得日数</param>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="needsRawExtended">rawExtended が必要か (optional)</param>
        /// <param name="isFree">無料放送のみ取得するか (true: 無料放送, false: 有料放送, 無指定: 全て) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;Schedule&gt;</returns>
        public List<Schedule> SchedulesChannelIdGet(long channelId, long startAt, int days, bool isHalfWidth, bool? needsRawExtended = default, bool? isFree = default, int operationIndex = 0)
        {
            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<List<Schedule>> localVarResponse = SchedulesChannelIdGetWithHttpInfo(channelId, startAt, days, isHalfWidth, needsRawExtended, isFree);
            return localVarResponse.Data;
        }

        /// <summary>
        /// 指定された放送局の番組表情報取得 指定された放送局の番組表情報を取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="channelId">放送局 id</param>
        /// <param name="startAt">開始時刻</param>
        /// <param name="days">取得日数</param>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="needsRawExtended">rawExtended が必要か (optional)</param>
        /// <param name="isFree">無料放送のみ取得するか (true: 無料放送, false: 有料放送, 無指定: 全て) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;Schedule&gt;</returns>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<List<Schedule>> SchedulesChannelIdGetWithHttpInfo(long channelId, long startAt, int days, bool isHalfWidth, bool? needsRawExtended = default, bool? isFree = default, int operationIndex = 0)
        {
            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("channelId", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(channelId)); // path parameter
            localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "startAt", startAt));
            localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "days", days));
            localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "isHalfWidth", isHalfWidth));
            if (needsRawExtended != null)
            {
                localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "needsRawExtended", needsRawExtended));
            }
            if (isFree != null)
            {
                localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "isFree", isFree));
            }

            localVarRequestOptions.Operation = "SchedulesApi.SchedulesChannelIdGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<Schedule>>("/schedules/{channelId}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SchedulesChannelIdGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 指定された放送局の番組表情報取得 指定された放送局の番組表情報を取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="channelId">放送局 id</param>
        /// <param name="startAt">開始時刻</param>
        /// <param name="days">取得日数</param>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="needsRawExtended">rawExtended が必要か (optional)</param>
        /// <param name="isFree">無料放送のみ取得するか (true: 無料放送, false: 有料放送, 無指定: 全て) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;Schedule&gt;</returns>
        public async System.Threading.Tasks.Task<List<Schedule>> SchedulesChannelIdGetAsync(long channelId, long startAt, int days, bool isHalfWidth, bool? needsRawExtended = default, bool? isFree = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<List<Schedule>> localVarResponse = await SchedulesChannelIdGetWithHttpInfoAsync(channelId, startAt, days, isHalfWidth, needsRawExtended, isFree, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// 指定された放送局の番組表情報取得 指定された放送局の番組表情報を取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="channelId">放送局 id</param>
        /// <param name="startAt">開始時刻</param>
        /// <param name="days">取得日数</param>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="needsRawExtended">rawExtended が必要か (optional)</param>
        /// <param name="isFree">無料放送のみ取得するか (true: 無料放送, false: 有料放送, 無指定: 全て) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;Schedule&gt;)</returns>
        public async System.Threading.Tasks.Task<X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<List<Schedule>>> SchedulesChannelIdGetWithHttpInfoAsync(long channelId, long startAt, int days, bool isHalfWidth, bool? needsRawExtended = default, bool? isFree = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {

            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("channelId", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(channelId)); // path parameter
            localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "startAt", startAt));
            localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "days", days));
            localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "isHalfWidth", isHalfWidth));
            if (needsRawExtended != null)
            {
                localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "needsRawExtended", needsRawExtended));
            }
            if (isFree != null)
            {
                localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "isFree", isFree));
            }

            localVarRequestOptions.Operation = "SchedulesApi.SchedulesChannelIdGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<Schedule>>("/schedules/{channelId}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SchedulesChannelIdGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 指定された番組表情報取得 指定された番組表情報を取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="programId">program id</param>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ScheduleProgramItem</returns>
        public ScheduleProgramItem SchedulesDetailProgramIdGet(long programId, bool isHalfWidth, int operationIndex = 0)
        {
            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<ScheduleProgramItem> localVarResponse = SchedulesDetailProgramIdGetWithHttpInfo(programId, isHalfWidth);
            return localVarResponse.Data;
        }

        /// <summary>
        /// 指定された番組表情報取得 指定された番組表情報を取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="programId">program id</param>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ScheduleProgramItem</returns>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<ScheduleProgramItem> SchedulesDetailProgramIdGetWithHttpInfo(long programId, bool isHalfWidth, int operationIndex = 0)
        {
            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("programId", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(programId)); // path parameter
            localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "isHalfWidth", isHalfWidth));

            localVarRequestOptions.Operation = "SchedulesApi.SchedulesDetailProgramIdGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<ScheduleProgramItem>("/schedules/detail/{programId}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SchedulesDetailProgramIdGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 指定された番組表情報取得 指定された番組表情報を取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="programId">program id</param>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ScheduleProgramItem</returns>
        public async System.Threading.Tasks.Task<ScheduleProgramItem> SchedulesDetailProgramIdGetAsync(long programId, bool isHalfWidth, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<ScheduleProgramItem> localVarResponse = await SchedulesDetailProgramIdGetWithHttpInfoAsync(programId, isHalfWidth, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// 指定された番組表情報取得 指定された番組表情報を取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="programId">program id</param>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ScheduleProgramItem)</returns>
        public async System.Threading.Tasks.Task<X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<ScheduleProgramItem>> SchedulesDetailProgramIdGetWithHttpInfoAsync(long programId, bool isHalfWidth, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {

            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("programId", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(programId)); // path parameter
            localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "isHalfWidth", isHalfWidth));

            localVarRequestOptions.Operation = "SchedulesApi.SchedulesDetailProgramIdGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ScheduleProgramItem>("/schedules/detail/{programId}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SchedulesDetailProgramIdGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 番組表情報取得 番組表情報を取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="startAt">開始時刻</param>
        /// <param name="endAt">終了時刻</param>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="GR">GR</param>
        /// <param name="BS">BS</param>
        /// <param name="CS">CS</param>
        /// <param name="SKY">SKY</param>
        /// <param name="needsRawExtended">rawExtended が必要か (optional)</param>
        /// <param name="isFree">無料放送のみ取得するか (true: 無料放送, false: 有料放送, 無指定: 全て) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;Schedule&gt;</returns>
        public List<Schedule> SchedulesGet(long startAt, long endAt, bool isHalfWidth, bool GR, bool BS, bool CS, bool SKY, bool? needsRawExtended = default, bool? isFree = default, int operationIndex = 0)
        {
            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<List<Schedule>> localVarResponse = SchedulesGetWithHttpInfo(startAt, endAt, isHalfWidth, GR, BS, CS, SKY, needsRawExtended, isFree);
            return localVarResponse.Data;
        }

        /// <summary>
        /// 番組表情報取得 番組表情報を取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="startAt">開始時刻</param>
        /// <param name="endAt">終了時刻</param>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="GR">GR</param>
        /// <param name="BS">BS</param>
        /// <param name="CS">CS</param>
        /// <param name="SKY">SKY</param>
        /// <param name="needsRawExtended">rawExtended が必要か (optional)</param>
        /// <param name="isFree">無料放送のみ取得するか (true: 無料放送, false: 有料放送, 無指定: 全て) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;Schedule&gt;</returns>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<List<Schedule>> SchedulesGetWithHttpInfo(long startAt, long endAt, bool isHalfWidth, bool GR, bool BS, bool CS, bool SKY, bool? needsRawExtended = default, bool? isFree = default, int operationIndex = 0)
        {
            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "startAt", startAt));
            localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "endAt", endAt));
            localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "isHalfWidth", isHalfWidth));
            if (needsRawExtended != null)
            {
                localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "needsRawExtended", needsRawExtended));
            }
            if (isFree != null)
            {
                localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "isFree", isFree));
            }
            localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "GR", GR));
            localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "BS", BS));
            localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "CS", CS));
            localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "SKY", SKY));

            localVarRequestOptions.Operation = "SchedulesApi.SchedulesGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<List<Schedule>>("/schedules", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SchedulesGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 番組表情報取得 番組表情報を取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="startAt">開始時刻</param>
        /// <param name="endAt">終了時刻</param>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="GR">GR</param>
        /// <param name="BS">BS</param>
        /// <param name="CS">CS</param>
        /// <param name="SKY">SKY</param>
        /// <param name="needsRawExtended">rawExtended が必要か (optional)</param>
        /// <param name="isFree">無料放送のみ取得するか (true: 無料放送, false: 有料放送, 無指定: 全て) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;Schedule&gt;</returns>
        public async System.Threading.Tasks.Task<List<Schedule>> SchedulesGetAsync(long startAt, long endAt, bool isHalfWidth, bool GR, bool BS, bool CS, bool SKY, bool? needsRawExtended = default, bool? isFree = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<List<Schedule>> localVarResponse = await SchedulesGetWithHttpInfoAsync(startAt, endAt, isHalfWidth, GR, BS, CS, SKY, needsRawExtended, isFree, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// 番組表情報取得 番組表情報を取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="startAt">開始時刻</param>
        /// <param name="endAt">終了時刻</param>
        /// <param name="isHalfWidth">半角文字で取得するか</param>
        /// <param name="GR">GR</param>
        /// <param name="BS">BS</param>
        /// <param name="CS">CS</param>
        /// <param name="SKY">SKY</param>
        /// <param name="needsRawExtended">rawExtended が必要か (optional)</param>
        /// <param name="isFree">無料放送のみ取得するか (true: 無料放送, false: 有料放送, 無指定: 全て) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;Schedule&gt;)</returns>
        public async System.Threading.Tasks.Task<X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<List<Schedule>>> SchedulesGetWithHttpInfoAsync(long startAt, long endAt, bool isHalfWidth, bool GR, bool BS, bool CS, bool SKY, bool? needsRawExtended = default, bool? isFree = default, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {

            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "startAt", startAt));
            localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "endAt", endAt));
            localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "isHalfWidth", isHalfWidth));
            if (needsRawExtended != null)
            {
                localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "needsRawExtended", needsRawExtended));
            }
            if (isFree != null)
            {
                localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "isFree", isFree));
            }
            localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "GR", GR));
            localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "BS", BS));
            localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "CS", CS));
            localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "SKY", SKY));

            localVarRequestOptions.Operation = "SchedulesApi.SchedulesGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<Schedule>>("/schedules", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SchedulesGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 番組検索結果を取得 番組検索結果を取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scheduleSearchOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>List&lt;ScheduleProgramItem&gt;</returns>
        public List<ScheduleProgramItem> SchedulesSearchPost(ScheduleSearchOption scheduleSearchOption, int operationIndex = 0)
        {
            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<List<ScheduleProgramItem>> localVarResponse = SchedulesSearchPostWithHttpInfo(scheduleSearchOption);
            return localVarResponse.Data;
        }

        /// <summary>
        /// 番組検索結果を取得 番組検索結果を取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scheduleSearchOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of List&lt;ScheduleProgramItem&gt;</returns>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<List<ScheduleProgramItem>> SchedulesSearchPostWithHttpInfo(ScheduleSearchOption scheduleSearchOption, int operationIndex = 0)
        {
            // verify the required parameter 'scheduleSearchOption' is set
            if (scheduleSearchOption == null)
            {
                throw new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException(400, "Missing required parameter 'scheduleSearchOption' when calling SchedulesApi->SchedulesSearchPost");
            }

            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = scheduleSearchOption;

            localVarRequestOptions.Operation = "SchedulesApi.SchedulesSearchPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<List<ScheduleProgramItem>>("/schedules/search", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SchedulesSearchPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 番組検索結果を取得 番組検索結果を取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scheduleSearchOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;ScheduleProgramItem&gt;</returns>
        public async System.Threading.Tasks.Task<List<ScheduleProgramItem>> SchedulesSearchPostAsync(ScheduleSearchOption scheduleSearchOption, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<List<ScheduleProgramItem>> localVarResponse = await SchedulesSearchPostWithHttpInfoAsync(scheduleSearchOption, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// 番組検索結果を取得 番組検索結果を取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="scheduleSearchOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;ScheduleProgramItem&gt;)</returns>
        public async System.Threading.Tasks.Task<X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<List<ScheduleProgramItem>>> SchedulesSearchPostWithHttpInfoAsync(ScheduleSearchOption scheduleSearchOption, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'scheduleSearchOption' is set
            if (scheduleSearchOption == null)
            {
                throw new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException(400, "Missing required parameter 'scheduleSearchOption' when calling SchedulesApi->SchedulesSearchPost");
            }


            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = scheduleSearchOption;

            localVarRequestOptions.Operation = "SchedulesApi.SchedulesSearchPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<List<ScheduleProgramItem>>("/schedules/search", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SchedulesSearchPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
