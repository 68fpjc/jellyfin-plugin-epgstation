/*
 * epgstation
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.6.20
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using X68fpjc.Jellyfin.EPGStation.OpenAPI.Client;
using X68fpjc.Jellyfin.EPGStation.OpenAPI.Model;

namespace X68fpjc.Jellyfin.EPGStation.OpenAPI.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IVideosApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// アップロードしたビデオファイルを追加
        /// </summary>
        /// <remarks>
        /// アップロードしたビデオファイルを追加する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="recordedId">録画済み番組 id</param>
        /// <param name="parentDirectoryName">親保存ディレクトリ</param>
        /// <param name="viewName">表示名</param>
        /// <param name="fileType"></param>
        /// <param name="file"></param>
        /// <param name="subDirectory">保存ディレクトリ (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        void VideosUploadPost(int recordedId, string parentDirectoryName, string viewName, VideoFileType fileType, System.IO.Stream file, string? subDirectory = default(string?), int operationIndex = 0);

        /// <summary>
        /// アップロードしたビデオファイルを追加
        /// </summary>
        /// <remarks>
        /// アップロードしたビデオファイルを追加する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="recordedId">録画済み番組 id</param>
        /// <param name="parentDirectoryName">親保存ディレクトリ</param>
        /// <param name="viewName">表示名</param>
        /// <param name="fileType"></param>
        /// <param name="file"></param>
        /// <param name="subDirectory">保存ディレクトリ (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> VideosUploadPostWithHttpInfo(int recordedId, string parentDirectoryName, string viewName, VideoFileType fileType, System.IO.Stream file, string? subDirectory = default(string?), int operationIndex = 0);
        /// <summary>
        /// ビデオファイル
        /// </summary>
        /// <remarks>
        /// ビデオファイルを削除する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        void VideosVideoFileIdDelete(int videoFileId, int operationIndex = 0);

        /// <summary>
        /// ビデオファイル
        /// </summary>
        /// <remarks>
        /// ビデオファイルを削除する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> VideosVideoFileIdDeleteWithHttpInfo(int videoFileId, int operationIndex = 0);
        /// <summary>
        /// 動画の長さ
        /// </summary>
        /// <remarks>
        /// 動画の長さを取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>VideoFileDuration</returns>
        VideoFileDuration VideosVideoFileIdDurationGet(int videoFileId, int operationIndex = 0);

        /// <summary>
        /// 動画の長さ
        /// </summary>
        /// <remarks>
        /// 動画の長さを取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of VideoFileDuration</returns>
        ApiResponse<VideoFileDuration> VideosVideoFileIdDurationGetWithHttpInfo(int videoFileId, int operationIndex = 0);
        /// <summary>
        /// ビデオファイル
        /// </summary>
        /// <remarks>
        /// ビデオファイルを取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="isDownload">ファイルをダウンロードするか (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        void VideosVideoFileIdGet(int videoFileId, bool? isDownload = default(bool?), int operationIndex = 0);

        /// <summary>
        /// ビデオファイル
        /// </summary>
        /// <remarks>
        /// ビデオファイルを取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="isDownload">ファイルをダウンロードするか (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> VideosVideoFileIdGetWithHttpInfo(int videoFileId, bool? isDownload = default(bool?), int operationIndex = 0);
        /// <summary>
        /// ビデオリンクを kodi へ送信
        /// </summary>
        /// <remarks>
        /// ビデオリンクを kodi へ送信する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="sendVideoLinkToKodiOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        void VideosVideoFileIdKodiPost(int videoFileId, SendVideoLinkToKodiOption sendVideoLinkToKodiOption, int operationIndex = 0);

        /// <summary>
        /// ビデオリンクを kodi へ送信
        /// </summary>
        /// <remarks>
        /// ビデオリンクを kodi へ送信する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="sendVideoLinkToKodiOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> VideosVideoFileIdKodiPostWithHttpInfo(int videoFileId, SendVideoLinkToKodiOption sendVideoLinkToKodiOption, int operationIndex = 0);
        /// <summary>
        /// ビデオプレイリスト
        /// </summary>
        /// <remarks>
        /// ビデオプレイリストを取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        void VideosVideoFileIdPlaylistGet(int videoFileId, int operationIndex = 0);

        /// <summary>
        /// ビデオプレイリスト
        /// </summary>
        /// <remarks>
        /// ビデオプレイリストを取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> VideosVideoFileIdPlaylistGetWithHttpInfo(int videoFileId, int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IVideosApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// アップロードしたビデオファイルを追加
        /// </summary>
        /// <remarks>
        /// アップロードしたビデオファイルを追加する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="recordedId">録画済み番組 id</param>
        /// <param name="parentDirectoryName">親保存ディレクトリ</param>
        /// <param name="viewName">表示名</param>
        /// <param name="fileType"></param>
        /// <param name="file"></param>
        /// <param name="subDirectory">保存ディレクトリ (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task VideosUploadPostAsync(int recordedId, string parentDirectoryName, string viewName, VideoFileType fileType, System.IO.Stream file, string? subDirectory = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// アップロードしたビデオファイルを追加
        /// </summary>
        /// <remarks>
        /// アップロードしたビデオファイルを追加する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="recordedId">録画済み番組 id</param>
        /// <param name="parentDirectoryName">親保存ディレクトリ</param>
        /// <param name="viewName">表示名</param>
        /// <param name="fileType"></param>
        /// <param name="file"></param>
        /// <param name="subDirectory">保存ディレクトリ (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> VideosUploadPostWithHttpInfoAsync(int recordedId, string parentDirectoryName, string viewName, VideoFileType fileType, System.IO.Stream file, string? subDirectory = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// ビデオファイル
        /// </summary>
        /// <remarks>
        /// ビデオファイルを削除する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task VideosVideoFileIdDeleteAsync(int videoFileId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// ビデオファイル
        /// </summary>
        /// <remarks>
        /// ビデオファイルを削除する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> VideosVideoFileIdDeleteWithHttpInfoAsync(int videoFileId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// 動画の長さ
        /// </summary>
        /// <remarks>
        /// 動画の長さを取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of VideoFileDuration</returns>
        System.Threading.Tasks.Task<VideoFileDuration> VideosVideoFileIdDurationGetAsync(int videoFileId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// 動画の長さ
        /// </summary>
        /// <remarks>
        /// 動画の長さを取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (VideoFileDuration)</returns>
        System.Threading.Tasks.Task<ApiResponse<VideoFileDuration>> VideosVideoFileIdDurationGetWithHttpInfoAsync(int videoFileId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// ビデオファイル
        /// </summary>
        /// <remarks>
        /// ビデオファイルを取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="isDownload">ファイルをダウンロードするか (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task VideosVideoFileIdGetAsync(int videoFileId, bool? isDownload = default(bool?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// ビデオファイル
        /// </summary>
        /// <remarks>
        /// ビデオファイルを取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="isDownload">ファイルをダウンロードするか (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> VideosVideoFileIdGetWithHttpInfoAsync(int videoFileId, bool? isDownload = default(bool?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// ビデオリンクを kodi へ送信
        /// </summary>
        /// <remarks>
        /// ビデオリンクを kodi へ送信する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="sendVideoLinkToKodiOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task VideosVideoFileIdKodiPostAsync(int videoFileId, SendVideoLinkToKodiOption sendVideoLinkToKodiOption, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// ビデオリンクを kodi へ送信
        /// </summary>
        /// <remarks>
        /// ビデオリンクを kodi へ送信する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="sendVideoLinkToKodiOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> VideosVideoFileIdKodiPostWithHttpInfoAsync(int videoFileId, SendVideoLinkToKodiOption sendVideoLinkToKodiOption, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// ビデオプレイリスト
        /// </summary>
        /// <remarks>
        /// ビデオプレイリストを取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task VideosVideoFileIdPlaylistGetAsync(int videoFileId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// ビデオプレイリスト
        /// </summary>
        /// <remarks>
        /// ビデオプレイリストを取得する
        /// </remarks>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> VideosVideoFileIdPlaylistGetWithHttpInfoAsync(int videoFileId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IVideosApi : IVideosApiSync, IVideosApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class VideosApi : IVideosApi
    {
        private X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="VideosApi"/> class.
        /// </summary>
        /// <returns></returns>
        public VideosApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="VideosApi"/> class.
        /// </summary>
        /// <returns></returns>
        public VideosApi(string basePath)
        {
            this.Configuration = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.Configuration.MergeConfigurations(
                X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.GlobalConfiguration.Instance,
                new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.Configuration { BasePath = basePath }
            );
            this.Client = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="VideosApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public VideosApi(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.Configuration.MergeConfigurations(
                X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="VideosApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public VideosApi(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ISynchronousClient client, X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.IAsynchronousClient asyncClient, X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// アップロードしたビデオファイルを追加 アップロードしたビデオファイルを追加する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="recordedId">録画済み番組 id</param>
        /// <param name="parentDirectoryName">親保存ディレクトリ</param>
        /// <param name="viewName">表示名</param>
        /// <param name="fileType"></param>
        /// <param name="file"></param>
        /// <param name="subDirectory">保存ディレクトリ (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        public void VideosUploadPost(int recordedId, string parentDirectoryName, string viewName, VideoFileType fileType, System.IO.Stream file, string? subDirectory = default(string?), int operationIndex = 0)
        {
            VideosUploadPostWithHttpInfo(recordedId, parentDirectoryName, viewName, fileType, file, subDirectory);
        }

        /// <summary>
        /// アップロードしたビデオファイルを追加 アップロードしたビデオファイルを追加する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="recordedId">録画済み番組 id</param>
        /// <param name="parentDirectoryName">親保存ディレクトリ</param>
        /// <param name="viewName">表示名</param>
        /// <param name="fileType"></param>
        /// <param name="file"></param>
        /// <param name="subDirectory">保存ディレクトリ (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<Object> VideosUploadPostWithHttpInfo(int recordedId, string parentDirectoryName, string viewName, VideoFileType fileType, System.IO.Stream file, string? subDirectory = default(string?), int operationIndex = 0)
        {
            // verify the required parameter 'parentDirectoryName' is set
            if (parentDirectoryName == null)
            {
                throw new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException(400, "Missing required parameter 'parentDirectoryName' when calling VideosApi->VideosUploadPost");
            }

            // verify the required parameter 'viewName' is set
            if (viewName == null)
            {
                throw new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException(400, "Missing required parameter 'viewName' when calling VideosApi->VideosUploadPost");
            }

            // verify the required parameter 'file' is set
            if (file == null)
            {
                throw new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException(400, "Missing required parameter 'file' when calling VideosApi->VideosUploadPost");
            }

            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "multipart/form-data"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.FormParameters.Add("recordedId", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(recordedId)); // form parameter
            localVarRequestOptions.FormParameters.Add("parentDirectoryName", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(parentDirectoryName)); // form parameter
            if (subDirectory != null)
            {
                localVarRequestOptions.FormParameters.Add("subDirectory", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(subDirectory)); // form parameter
            }
            localVarRequestOptions.FormParameters.Add("viewName", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(viewName)); // form parameter
            localVarRequestOptions.FormParameters.Add("fileType", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(fileType)); // form parameter
            localVarRequestOptions.FileParameters.Add("file", file);

            localVarRequestOptions.Operation = "VideosApi.VideosUploadPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Object>("/videos/upload", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("VideosUploadPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// アップロードしたビデオファイルを追加 アップロードしたビデオファイルを追加する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="recordedId">録画済み番組 id</param>
        /// <param name="parentDirectoryName">親保存ディレクトリ</param>
        /// <param name="viewName">表示名</param>
        /// <param name="fileType"></param>
        /// <param name="file"></param>
        /// <param name="subDirectory">保存ディレクトリ (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task VideosUploadPostAsync(int recordedId, string parentDirectoryName, string viewName, VideoFileType fileType, System.IO.Stream file, string? subDirectory = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            await VideosUploadPostWithHttpInfoAsync(recordedId, parentDirectoryName, viewName, fileType, file, subDirectory, operationIndex, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// アップロードしたビデオファイルを追加 アップロードしたビデオファイルを追加する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="recordedId">録画済み番組 id</param>
        /// <param name="parentDirectoryName">親保存ディレクトリ</param>
        /// <param name="viewName">表示名</param>
        /// <param name="fileType"></param>
        /// <param name="file"></param>
        /// <param name="subDirectory">保存ディレクトリ (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<Object>> VideosUploadPostWithHttpInfoAsync(int recordedId, string parentDirectoryName, string viewName, VideoFileType fileType, System.IO.Stream file, string? subDirectory = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'parentDirectoryName' is set
            if (parentDirectoryName == null)
            {
                throw new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException(400, "Missing required parameter 'parentDirectoryName' when calling VideosApi->VideosUploadPost");
            }

            // verify the required parameter 'viewName' is set
            if (viewName == null)
            {
                throw new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException(400, "Missing required parameter 'viewName' when calling VideosApi->VideosUploadPost");
            }

            // verify the required parameter 'file' is set
            if (file == null)
            {
                throw new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException(400, "Missing required parameter 'file' when calling VideosApi->VideosUploadPost");
            }


            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "multipart/form-data"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.FormParameters.Add("recordedId", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(recordedId)); // form parameter
            localVarRequestOptions.FormParameters.Add("parentDirectoryName", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(parentDirectoryName)); // form parameter
            if (subDirectory != null)
            {
                localVarRequestOptions.FormParameters.Add("subDirectory", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(subDirectory)); // form parameter
            }
            localVarRequestOptions.FormParameters.Add("viewName", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(viewName)); // form parameter
            localVarRequestOptions.FormParameters.Add("fileType", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(fileType)); // form parameter
            localVarRequestOptions.FileParameters.Add("file", file);

            localVarRequestOptions.Operation = "VideosApi.VideosUploadPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<Object>("/videos/upload", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("VideosUploadPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// ビデオファイル ビデオファイルを削除する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        public void VideosVideoFileIdDelete(int videoFileId, int operationIndex = 0)
        {
            VideosVideoFileIdDeleteWithHttpInfo(videoFileId);
        }

        /// <summary>
        /// ビデオファイル ビデオファイルを削除する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<Object> VideosVideoFileIdDeleteWithHttpInfo(int videoFileId, int operationIndex = 0)
        {
            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("videoFileId", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(videoFileId)); // path parameter

            localVarRequestOptions.Operation = "VideosApi.VideosVideoFileIdDelete";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Delete<Object>("/videos/{videoFileId}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("VideosVideoFileIdDelete", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// ビデオファイル ビデオファイルを削除する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task VideosVideoFileIdDeleteAsync(int videoFileId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            await VideosVideoFileIdDeleteWithHttpInfoAsync(videoFileId, operationIndex, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// ビデオファイル ビデオファイルを削除する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<Object>> VideosVideoFileIdDeleteWithHttpInfoAsync(int videoFileId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("videoFileId", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(videoFileId)); // path parameter

            localVarRequestOptions.Operation = "VideosApi.VideosVideoFileIdDelete";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.DeleteAsync<Object>("/videos/{videoFileId}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("VideosVideoFileIdDelete", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 動画の長さ 動画の長さを取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>VideoFileDuration</returns>
        public VideoFileDuration VideosVideoFileIdDurationGet(int videoFileId, int operationIndex = 0)
        {
            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<VideoFileDuration> localVarResponse = VideosVideoFileIdDurationGetWithHttpInfo(videoFileId);
            return localVarResponse.Data;
        }

        /// <summary>
        /// 動画の長さ 動画の長さを取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of VideoFileDuration</returns>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<VideoFileDuration> VideosVideoFileIdDurationGetWithHttpInfo(int videoFileId, int operationIndex = 0)
        {
            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("videoFileId", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(videoFileId)); // path parameter

            localVarRequestOptions.Operation = "VideosApi.VideosVideoFileIdDurationGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<VideoFileDuration>("/videos/{videoFileId}/duration", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("VideosVideoFileIdDurationGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// 動画の長さ 動画の長さを取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of VideoFileDuration</returns>
        public async System.Threading.Tasks.Task<VideoFileDuration> VideosVideoFileIdDurationGetAsync(int videoFileId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<VideoFileDuration> localVarResponse = await VideosVideoFileIdDurationGetWithHttpInfoAsync(videoFileId, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// 動画の長さ 動画の長さを取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (VideoFileDuration)</returns>
        public async System.Threading.Tasks.Task<X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<VideoFileDuration>> VideosVideoFileIdDurationGetWithHttpInfoAsync(int videoFileId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("videoFileId", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(videoFileId)); // path parameter

            localVarRequestOptions.Operation = "VideosApi.VideosVideoFileIdDurationGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<VideoFileDuration>("/videos/{videoFileId}/duration", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("VideosVideoFileIdDurationGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// ビデオファイル ビデオファイルを取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="isDownload">ファイルをダウンロードするか (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        public void VideosVideoFileIdGet(int videoFileId, bool? isDownload = default(bool?), int operationIndex = 0)
        {
            VideosVideoFileIdGetWithHttpInfo(videoFileId, isDownload);
        }

        /// <summary>
        /// ビデオファイル ビデオファイルを取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="isDownload">ファイルをダウンロードするか (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<Object> VideosVideoFileIdGetWithHttpInfo(int videoFileId, bool? isDownload = default(bool?), int operationIndex = 0)
        {
            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "video/mp2t",
                "video/mp4",
                "video/x-matroska",
                "video/webm",
                "application/octet-stream",
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("videoFileId", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(videoFileId)); // path parameter
            if (isDownload != null)
            {
                localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "isDownload", isDownload));
            }

            localVarRequestOptions.Operation = "VideosApi.VideosVideoFileIdGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<Object>("/videos/{videoFileId}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("VideosVideoFileIdGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// ビデオファイル ビデオファイルを取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="isDownload">ファイルをダウンロードするか (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task VideosVideoFileIdGetAsync(int videoFileId, bool? isDownload = default(bool?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            await VideosVideoFileIdGetWithHttpInfoAsync(videoFileId, isDownload, operationIndex, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// ビデオファイル ビデオファイルを取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="isDownload">ファイルをダウンロードするか (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<Object>> VideosVideoFileIdGetWithHttpInfoAsync(int videoFileId, bool? isDownload = default(bool?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "video/mp2t",
                "video/mp4",
                "video/x-matroska",
                "video/webm",
                "application/octet-stream",
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("videoFileId", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(videoFileId)); // path parameter
            if (isDownload != null)
            {
                localVarRequestOptions.QueryParameters.Add(X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToMultiMap("", "isDownload", isDownload));
            }

            localVarRequestOptions.Operation = "VideosApi.VideosVideoFileIdGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<Object>("/videos/{videoFileId}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("VideosVideoFileIdGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// ビデオリンクを kodi へ送信 ビデオリンクを kodi へ送信する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="sendVideoLinkToKodiOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        public void VideosVideoFileIdKodiPost(int videoFileId, SendVideoLinkToKodiOption sendVideoLinkToKodiOption, int operationIndex = 0)
        {
            VideosVideoFileIdKodiPostWithHttpInfo(videoFileId, sendVideoLinkToKodiOption);
        }

        /// <summary>
        /// ビデオリンクを kodi へ送信 ビデオリンクを kodi へ送信する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="sendVideoLinkToKodiOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<Object> VideosVideoFileIdKodiPostWithHttpInfo(int videoFileId, SendVideoLinkToKodiOption sendVideoLinkToKodiOption, int operationIndex = 0)
        {
            // verify the required parameter 'sendVideoLinkToKodiOption' is set
            if (sendVideoLinkToKodiOption == null)
            {
                throw new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException(400, "Missing required parameter 'sendVideoLinkToKodiOption' when calling VideosApi->VideosVideoFileIdKodiPost");
            }

            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("videoFileId", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(videoFileId)); // path parameter
            localVarRequestOptions.Data = sendVideoLinkToKodiOption;

            localVarRequestOptions.Operation = "VideosApi.VideosVideoFileIdKodiPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Post<Object>("/videos/{videoFileId}/kodi", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("VideosVideoFileIdKodiPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// ビデオリンクを kodi へ送信 ビデオリンクを kodi へ送信する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="sendVideoLinkToKodiOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task VideosVideoFileIdKodiPostAsync(int videoFileId, SendVideoLinkToKodiOption sendVideoLinkToKodiOption, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            await VideosVideoFileIdKodiPostWithHttpInfoAsync(videoFileId, sendVideoLinkToKodiOption, operationIndex, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// ビデオリンクを kodi へ送信 ビデオリンクを kodi へ送信する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="sendVideoLinkToKodiOption"></param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<Object>> VideosVideoFileIdKodiPostWithHttpInfoAsync(int videoFileId, SendVideoLinkToKodiOption sendVideoLinkToKodiOption, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'sendVideoLinkToKodiOption' is set
            if (sendVideoLinkToKodiOption == null)
            {
                throw new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException(400, "Missing required parameter 'sendVideoLinkToKodiOption' when calling VideosApi->VideosVideoFileIdKodiPost");
            }


            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("videoFileId", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(videoFileId)); // path parameter
            localVarRequestOptions.Data = sendVideoLinkToKodiOption;

            localVarRequestOptions.Operation = "VideosApi.VideosVideoFileIdKodiPost";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<Object>("/videos/{videoFileId}/kodi", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("VideosVideoFileIdKodiPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// ビデオプレイリスト ビデオプレイリストを取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        public void VideosVideoFileIdPlaylistGet(int videoFileId, int operationIndex = 0)
        {
            VideosVideoFileIdPlaylistGetWithHttpInfo(videoFileId);
        }

        /// <summary>
        /// ビデオプレイリスト ビデオプレイリストを取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<Object> VideosVideoFileIdPlaylistGetWithHttpInfo(int videoFileId, int operationIndex = 0)
        {
            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/x-mpegURL",
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("videoFileId", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(videoFileId)); // path parameter

            localVarRequestOptions.Operation = "VideosApi.VideosVideoFileIdPlaylistGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = this.Client.Get<Object>("/videos/{videoFileId}/playlist", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("VideosVideoFileIdPlaylistGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// ビデオプレイリスト ビデオプレイリストを取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task VideosVideoFileIdPlaylistGetAsync(int videoFileId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            await VideosVideoFileIdPlaylistGetWithHttpInfoAsync(videoFileId, operationIndex, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// ビデオプレイリスト ビデオプレイリストを取得する
        /// </summary>
        /// <exception cref="X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="videoFileId">video file id</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ApiResponse<Object>> VideosVideoFileIdPlaylistGetWithHttpInfoAsync(int videoFileId, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions localVarRequestOptions = new X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/x-mpegURL",
                "application/json"
            };

            var localVarContentType = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("videoFileId", X68fpjc.Jellyfin.EPGStation.OpenAPI.Client.ClientUtils.ParameterToString(videoFileId)); // path parameter

            localVarRequestOptions.Operation = "VideosApi.VideosVideoFileIdPlaylistGet";
            localVarRequestOptions.OperationIndex = operationIndex;


            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<Object>("/videos/{videoFileId}/playlist", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("VideosVideoFileIdPlaylistGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
